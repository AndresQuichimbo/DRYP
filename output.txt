Timer unit: 1e-07 s

Total time: 136.147 s
File: C:\Users\km19051\OneDrive - Cardiff University\PhD\Github\DRYP\run_DRYP.py
Function: run_DRYP at line 28

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    28                                           @profile
    29                                           def run_DRYP(filename_input):
    30                                           
    31         1     265611.0 265611.0      0.0  	data_in = inputfile(filename_input)
    32         1         19.0     19.0      0.0  	daily = 1
    33                                           	# setting model fluxes and state variables
    34         1     742922.0 742922.0      0.1  	env_state = model_environment_status(data_in)
    35         1       1950.0   1950.0      0.0  	env_state.set_output_dir(data_in)
    36         1     280828.0 280828.0      0.0  	env_state.points_output(data_in)
    37                                           	
    38                                           	# setting model components
    39         1  330753751.0 330753751.0     24.3  	rf = rainfall(data_in, env_state)
    40         1        282.0    282.0      0.0  	abc = ABMconnector(data_in, env_state)
    41         1        279.0    279.0      0.0  	inf = infiltration(env_state, data_in)
    42         1        158.0    158.0      0.0  	swb = swbm(env_state, data_in)
    43         1        101.0    101.0      0.0  	swb_rip = swbm(env_state, data_in)
    44         1      10938.0  10938.0      0.0  	ro = runoff_routing(env_state, data_in)
    45         1       6000.0   6000.0      0.0  	gw = gwflow_EFD(env_state, data_in)
    46                                           	
    47                                           	# Output variables and location
    48         1         93.0     93.0      0.0  	outavg = GlobalTimeVarAvg(env_state.area_catch_factor)
    49         1         95.0     95.0      0.0  	outavg_rip = GlobalTimeVarAvg(env_state.area_river_factor)
    50         1        102.0    102.0      0.0  	outpts = GlobalTimeVarPts()
    51         1         54.0     54.0      0.0  	state_var = GlobalGridVar(env_state, data_in)
    52                                           	
    53         1         13.0     13.0      0.0  	t = 0	
    54         1         13.0     13.0      0.0  	t_eto = 0	
    55         1         13.0     13.0      0.0  	t_pre = 0
    56                                           	
    57         1         12.0     12.0      0.0  	gw_level = []
    58         1         15.0     15.0      0.0  	pre_mb = []
    59         1         19.0     19.0      0.0  	exs_mb = []
    60         1         14.0     14.0      0.0  	tls_mb = []
    61         1         13.0     13.0      0.0  	gws_mb = []
    62         1         13.0     13.0      0.0  	uzs_mb = []
    63         1         12.0     12.0      0.0  	dis_mb = []
    64         1         13.0     13.0      0.0  	rch_mb = []
    65         1         13.0     13.0      0.0  	aet_mb = []
    66         1         13.0     13.0      0.0  	egw_mb = []
    67                                           
    68         1         32.0     32.0      0.0  	rch_agg = np.zeros(len(swb.L_0))
    69         1         23.0     23.0      0.0  	etg_agg = np.zeros(len(swb.L_0))
    70         1         20.0     20.0      0.0  	dt_GW = np.int(data_in.dt)
    71                                           	
    72      1467      25323.0     17.3      0.0  	while t < rf.t_end:
    73                                           	
    74     36650     477321.0     13.0      0.0  		for UZ_ti in range(data_in.dt_hourly):
    75                                           			
    76     70368    1211563.0     17.2      0.1  			for dt_pre_sub in range(data_in.dt_sub_hourly):
    77                                           				
    78     35184     457478.0     13.0      0.0  				swb.run_soil_aquifer_one_step(env_state,
    79     35184    1047803.0     29.8      0.1  					env_state.grid.at_node['topographic__elevation'],
    80     35184     779664.0     22.2      0.1  					env_state.SZgrid.at_node['water_table__elevation'],
    81     35184     422940.0     12.0      0.0  					env_state.Duz,
    82     35184   12277356.0    348.9      0.9  					swb.tht_dt)
    83                                           															
    84     35184     547255.0     15.6      0.0  				env_state.Duz = swb.Duz
    85                                           				
    86     35184   51375041.0   1460.2      3.8  				rf.run_rainfall_one_step(t_pre, t_eto, env_state, data_in)
    87                                           				
    88     35184     587493.0     16.7      0.0  				abc.run_ABM_one_step(t_pre, env_state,
    89     35184     535747.0     15.2      0.0  					rf.rain, env_state.Duz, swb.tht_dt, env_state.fc,
    90     35184    1056131.0     30.0      0.1  					env_state.grid.at_node['wilting_point'],
    91     35184    2512142.0     71.4      0.2  					env_state.SZgrid.at_node['water_table__elevation'],
    92                                           					)
    93                                           					
    94     35184    1127610.0     32.0      0.1  				rf.rain += abc.auz
    95                                           				
    96     35184   29939663.0    850.9      2.2  				inf.run_infiltration_one_step(rf, env_state, data_in)
    97                                           				
    98     35184    5378243.0    152.9      0.4  				aux_usz = np.sum((swb.L_0*env_state.hill_factor)[env_state.act_nodes])
    99     35184    3793234.0    107.8      0.3  				aux_usp = np.sum((swb_rip.L_0*env_state.riv_factor)[env_state.act_nodes])
   100                                           				
   101     35184     576195.0     16.4      0.0  				swb.run_swbm_one_step(inf.inf_dt, rf.PET, env_state.Kc,
   102     35184   44004758.0   1250.7      3.2  					env_state.grid.at_node['Ksat_soil'], env_state, data_in)
   103                                           				
   104     35184    2163571.0     61.5      0.2  				env_state.grid.at_node['riv_sat_deficit'][:] *= (swb_rip.tht_dt)
   105                                           				
   106     35184  289833763.0   8237.7     21.3  				ro.run_runoff_one_step(inf, swb, abc.aof, env_state, data_in)
   107                                           				
   108     35184    1054038.0     30.0      0.1  				tls_aux = ro.tls_flow_dt*env_state.rip_factor
   109                                           				
   110     35184     775786.0     22.0      0.1  				rip_inf_dt = inf.inf_dt + tls_aux
   111                                           								
   112     35184     558441.0     15.9      0.0  				swb_rip.run_swbm_one_step(rip_inf_dt, rf.PET, env_state.Kc,
   113     35184     897220.0     25.5      0.1  						env_state.grid.at_node['Ksat_ch'], env_state,
   114     35184   44012242.0   1250.9      3.2  						data_in, env_state.river_ids_nodes)
   115                                           						
   116     35184    1238879.0     35.2      0.1  				swb_rip.pcl_dt *= env_state.riv_factor
   117     35184     874056.0     24.8      0.1  				swb_rip.aet_dt *= env_state.riv_factor
   118     35184     874546.0     24.9      0.1  				swb.pcl_dt *= env_state.hill_factor
   119     35184     840937.0     23.9      0.1  				swb.aet_dt *= env_state.hill_factor
   120     35184    1004523.0     28.6      0.1  				rech = swb.pcl_dt + swb_rip.pcl_dt - abc.asz# [mm/dt]
   121     35184    4971905.0    141.3      0.4  				etg_dt = gw.SZ_potential_ET(env_state, swb.gwe_dt)
   122     35184    1383248.0     39.3      0.1  				etg_agg += np.array(etg_dt) # [mm/h]											
   123     35184    1041877.0     29.6      0.1  				rch_agg += np.array(rech) # [mm/dt]
   124                                           				
   125                                           				# Water balance storage and flow
   126     35184    5394121.0    153.3      0.4  				pre_mb.append(np.sum(rf.rain[env_state.act_nodes]))
   127     35184    3567684.0    101.4      0.3  				exs_mb.append(np.sum(inf.exs_dt[env_state.act_nodes]))
   128     35184    3186569.0     90.6      0.2  				tls_mb.append(np.sum(tls_aux[env_state.act_nodes]))
   129     35184    3620481.0    102.9      0.3  				aux_usz1 = np.sum((swb.L_0*env_state.hill_factor)[env_state.act_nodes])
   130     35184    3458824.0     98.3      0.3  				aux_usp1 = np.sum((swb_rip.L_0*env_state.riv_factor)[env_state.act_nodes])
   131                                           				
   132     35184     753911.0     21.4      0.1  				uzs_mb.append(aux_usp1+aux_usz1-aux_usp-aux_usz)
   133     35184    3523227.0    100.1      0.3  				aet_mb.append(np.sum((swb_rip.aet_dt+swb.aet_dt)[env_state.act_nodes]))
   134     35184    3114062.0     88.5      0.2  				egw_mb.append(np.sum(etg_dt[env_state.act_nodes]))
   135     35184    3084178.0     87.7      0.2  				rch_mb.append(np.sum(rech[env_state.act_nodes]))				
   136                                           				#aux_ssz = storage_uz_sz(env_state, 0, 0)			
   137                                           				
   138     35184     707056.0     20.1      0.1  				if dt_GW == data_in.dtSZ:
   139                                           					# Change units to m/h
   140     35184    1458667.0     41.5      0.1  					env_state.SZgrid.at_node['discharge'][:] = 0.0
   141     35184    1910844.0     54.3      0.1  					env_state.SZgrid.at_node['recharge'][:] = (rch_agg - etg_agg)*0.001 #[mm/dt]
   142     35184     643407.0     18.3      0.0  					gw.run_one_step_gw(env_state, data_in.dtSZ/60, swb.tht_dt,
   143     35184  294129011.0   8359.7     21.6  						env_state.Droot*0.001)
   144     35184    1460414.0     41.5      0.1  					rch_agg = np.zeros(len(swb.L_0))
   145     35184     801399.0     22.8      0.1  					etg_agg = np.zeros(len(swb.L_0))
   146     35184     448837.0     12.8      0.0  					dt_GW = 0
   147                                           					
   148     35184     827614.0     23.5      0.1  				dt_GW += np.int(data_in.dt)				
   149                                           				
   150     35184   19610787.0    557.4      1.4  				gws_mb.append(storage_uz_sz(env_state, np.array(swb.tht_dt), gw.dh))#-aux_ssz)
   151     35184    4291253.0    122.0      0.3  				dis_mb.append(np.sum(env_state.SZgrid.at_node['discharge'][env_state.act_nodes])-gw.flux_out)
   152                                           				
   153                                           				#Extract average state and fluxes				
   154     35184    7175941.0    204.0      0.5  				outavg.extract_avg_var_pre(env_state.basin_nodes,rf)				
   155     35184    6517159.0    185.2      0.5  				outavg.extract_avg_var_UZ_inf(env_state.basin_nodes,inf)
   156     35184    8868500.0    252.1      0.7  				outavg.extract_avg_var_UZ_swb(env_state.basin_nodes,swb)
   157     35184    8741895.0    248.5      0.6  				outavg_rip.extract_avg_var_UZ_swb(env_state.basin_nodes,swb_rip)
   158     35184    7857228.0    223.3      0.6  				outavg.extract_avg_var_OF(env_state.basin_nodes,ro)
   159     35184    8024422.0    228.1      0.6  				outavg.extract_avg_var_SZ(env_state.basin_nodes,gw)
   160                                           				
   161                                           				#Extract point state and fluxes
   162     35184    4339941.0    123.3      0.3  				outpts.extract_point_var_UZ_inf(env_state.gaugeidUZ,inf)
   163     35184    4960996.0    141.0      0.4  				outpts.extract_point_var_UZ_swb(env_state.gaugeidUZ,swb)
   164     35184    3790272.0    107.7      0.3  				outpts.extract_point_var_OF(env_state.gaugeidOF,ro)
   165     35184    1766496.0     50.2      0.1  				outpts.extract_point_var_SZ(env_state.gaugeidGW,gw)
   166     35184     518099.0     14.7      0.0  				state_var.get_env_state(t_pre, rf, inf, swb,
   167     35184     958038.0     27.2      0.1  									ro, gw, swb_rip, env_state)
   168                                           				
   169     35184     976271.0     27.7      0.1  				env_state.L_0 = np.array(swb.L_0)				
   170     35184     506413.0     14.4      0.0  				t_pre += 1
   171     35184     488470.0     13.9      0.0  			t_eto += 1		
   172      1466      19869.0     13.6      0.0  		t += 1
   173                                           	
   174         1         14.0     14.0      0.0  	mb = [pre_mb, exs_mb, tls_mb, rch_mb, gws_mb,
   175         1         16.0     16.0      0.0  		uzs_mb, dis_mb, aet_mb, egw_mb]	
   176                                           	
   177         1    6289257.0 6289257.0      0.5  	outavg.save_avg_var(env_state.fnameTS_avg+'.csv', rf.date_sim_dt)
   178         1    2708476.0 2708476.0      0.2  	outavg_rip.save_avg_var(env_state.fnameTS_avg+'rip.csv', rf.date_sim_dt)
   179         1         63.0     63.0      0.0  	outpts.save_point_var(env_state.fnameTS_OF, rf.date_sim_dt,
   180         1        232.0    232.0      0.0  			ro.carea[env_state.gaugeidOF],
   181         1   78710118.0 78710118.0      5.8  			env_state.rarea[env_state.gaugeidOF])	
   182         1        393.0    393.0      0.0  	state_var.save_netCDF_var(env_state.fnameTS_avg+'.nc')
   183         1         29.0     29.0      0.0  	check_mass_balance(env_state.fnameTS_avg, outavg, outpts,
   184         1         25.0     25.0      0.0  			outavg_rip, mb, rf.date_sim_dt,
   185         1   10487690.0 10487690.0      0.8  			ro.carea[env_state.gaugeidOF[0]])
   186                                           	
   187                                           	# Save water table for initial conditions
   188         1         43.0     43.0      0.0  	fname_out = env_state.fnameTS_avg + '_wte_ini.asc'	
   189         1      49360.0  49360.0      0.0  	save_map_to_rastergrid(env_state.SZgrid, 'water_table__elevation', fname_out)

